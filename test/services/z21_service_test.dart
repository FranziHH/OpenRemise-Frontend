import 'package:Frontend/services/z21_service.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  group('z21_service', () {
    test('decode_dcc14', () {
      expect(decodeRvvvvvvv(0, int.parse('00000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(0, int.parse('00000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(0, int.parse('00000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(0, int.parse('00000011', radix: 2)), 2);
      expect(decodeRvvvvvvv(0, int.parse('00000100', radix: 2)), 3);
      expect(decodeRvvvvvvv(0, int.parse('00000101', radix: 2)), 4);
      expect(decodeRvvvvvvv(0, int.parse('00000110', radix: 2)), 5);
      expect(decodeRvvvvvvv(0, int.parse('00000111', radix: 2)), 6);
      expect(decodeRvvvvvvv(0, int.parse('00001000', radix: 2)), 7);
      expect(decodeRvvvvvvv(0, int.parse('00001001', radix: 2)), 8);
      expect(decodeRvvvvvvv(0, int.parse('00001010', radix: 2)), 9);
      expect(decodeRvvvvvvv(0, int.parse('00001011', radix: 2)), 10);
      expect(decodeRvvvvvvv(0, int.parse('00001100', radix: 2)), 11);
      expect(decodeRvvvvvvv(0, int.parse('00001101', radix: 2)), 12);
      expect(decodeRvvvvvvv(0, int.parse('00001110', radix: 2)), 13);
      expect(decodeRvvvvvvv(0, int.parse('00001111', radix: 2)), 14);

      expect(decodeRvvvvvvv(0, int.parse('10000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(0, int.parse('10000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(0, int.parse('10000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(0, int.parse('10000011', radix: 2)), 2);
      expect(decodeRvvvvvvv(0, int.parse('10000100', radix: 2)), 3);
      expect(decodeRvvvvvvv(0, int.parse('10000101', radix: 2)), 4);
      expect(decodeRvvvvvvv(0, int.parse('10000110', radix: 2)), 5);
      expect(decodeRvvvvvvv(0, int.parse('10000111', radix: 2)), 6);
      expect(decodeRvvvvvvv(0, int.parse('10001000', radix: 2)), 7);
      expect(decodeRvvvvvvv(0, int.parse('10001001', radix: 2)), 8);
      expect(decodeRvvvvvvv(0, int.parse('10001010', radix: 2)), 9);
      expect(decodeRvvvvvvv(0, int.parse('10001011', radix: 2)), 10);
      expect(decodeRvvvvvvv(0, int.parse('10001100', radix: 2)), 11);
      expect(decodeRvvvvvvv(0, int.parse('10001101', radix: 2)), 12);
      expect(decodeRvvvvvvv(0, int.parse('10001110', radix: 2)), 13);
      expect(decodeRvvvvvvv(0, int.parse('10001111', radix: 2)), 14);
    });

    test('encode_dcc14', () {
      expect(encodeRvvvvvvv(0, false, -1), int.parse('00000001', radix: 2));
      expect(encodeRvvvvvvv(0, false, 0), int.parse('00000000', radix: 2));
      expect(encodeRvvvvvvv(0, false, 1), int.parse('00000010', radix: 2));
      expect(encodeRvvvvvvv(0, false, 2), int.parse('00000011', radix: 2));
      expect(encodeRvvvvvvv(0, false, 3), int.parse('00000100', radix: 2));
      expect(encodeRvvvvvvv(0, false, 4), int.parse('00000101', radix: 2));
      expect(encodeRvvvvvvv(0, false, 5), int.parse('00000110', radix: 2));
      expect(encodeRvvvvvvv(0, false, 6), int.parse('00000111', radix: 2));
      expect(encodeRvvvvvvv(0, false, 7), int.parse('00001000', radix: 2));
      expect(encodeRvvvvvvv(0, false, 8), int.parse('00001001', radix: 2));
      expect(encodeRvvvvvvv(0, false, 9), int.parse('00001010', radix: 2));
      expect(encodeRvvvvvvv(0, false, 10), int.parse('00001011', radix: 2));
      expect(encodeRvvvvvvv(0, false, 11), int.parse('00001100', radix: 2));
      expect(encodeRvvvvvvv(0, false, 12), int.parse('00001101', radix: 2));
      expect(encodeRvvvvvvv(0, false, 13), int.parse('00001110', radix: 2));
      expect(encodeRvvvvvvv(0, false, 14), int.parse('00001111', radix: 2));

      expect(encodeRvvvvvvv(0, true, -1), int.parse('10000001', radix: 2));
      expect(encodeRvvvvvvv(0, true, 0), int.parse('10000000', radix: 2));
      expect(encodeRvvvvvvv(0, true, 1), int.parse('10000010', radix: 2));
      expect(encodeRvvvvvvv(0, true, 2), int.parse('10000011', radix: 2));
      expect(encodeRvvvvvvv(0, true, 3), int.parse('10000100', radix: 2));
      expect(encodeRvvvvvvv(0, true, 4), int.parse('10000101', radix: 2));
      expect(encodeRvvvvvvv(0, true, 5), int.parse('10000110', radix: 2));
      expect(encodeRvvvvvvv(0, true, 6), int.parse('10000111', radix: 2));
      expect(encodeRvvvvvvv(0, true, 7), int.parse('10001000', radix: 2));
      expect(encodeRvvvvvvv(0, true, 8), int.parse('10001001', radix: 2));
      expect(encodeRvvvvvvv(0, true, 9), int.parse('10001010', radix: 2));
      expect(encodeRvvvvvvv(0, true, 10), int.parse('10001011', radix: 2));
      expect(encodeRvvvvvvv(0, true, 11), int.parse('10001100', radix: 2));
      expect(encodeRvvvvvvv(0, true, 12), int.parse('10001101', radix: 2));
      expect(encodeRvvvvvvv(0, true, 13), int.parse('10001110', radix: 2));
      expect(encodeRvvvvvvv(0, true, 14), int.parse('10001111', radix: 2));
    });

    test('decode_dcc28', () {
      expect(decodeRvvvvvvv(2, int.parse('00000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(2, int.parse('00010001', radix: 2)), -1);
      expect(decodeRvvvvvvv(2, int.parse('00000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(2, int.parse('00010000', radix: 2)), 0);
      expect(decodeRvvvvvvv(2, int.parse('00000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(2, int.parse('00010010', radix: 2)), 2);
      expect(decodeRvvvvvvv(2, int.parse('00000011', radix: 2)), 3);
      expect(decodeRvvvvvvv(2, int.parse('00010011', radix: 2)), 4);
      expect(decodeRvvvvvvv(2, int.parse('00000100', radix: 2)), 5);
      expect(decodeRvvvvvvv(2, int.parse('00010100', radix: 2)), 6);
      expect(decodeRvvvvvvv(2, int.parse('00000101', radix: 2)), 7);
      expect(decodeRvvvvvvv(2, int.parse('00010101', radix: 2)), 8);
      expect(decodeRvvvvvvv(2, int.parse('00000110', radix: 2)), 9);
      expect(decodeRvvvvvvv(2, int.parse('00010110', radix: 2)), 10);
      expect(decodeRvvvvvvv(2, int.parse('00000111', radix: 2)), 11);
      expect(decodeRvvvvvvv(2, int.parse('00010111', radix: 2)), 12);
      expect(decodeRvvvvvvv(2, int.parse('00001000', radix: 2)), 13);
      expect(decodeRvvvvvvv(2, int.parse('00011000', radix: 2)), 14);
      expect(decodeRvvvvvvv(2, int.parse('00001001', radix: 2)), 15);
      expect(decodeRvvvvvvv(2, int.parse('00011001', radix: 2)), 16);
      expect(decodeRvvvvvvv(2, int.parse('00001010', radix: 2)), 17);
      expect(decodeRvvvvvvv(2, int.parse('00011010', radix: 2)), 18);
      expect(decodeRvvvvvvv(2, int.parse('00001011', radix: 2)), 19);
      expect(decodeRvvvvvvv(2, int.parse('00011011', radix: 2)), 20);
      expect(decodeRvvvvvvv(2, int.parse('00001100', radix: 2)), 21);
      expect(decodeRvvvvvvv(2, int.parse('00011100', radix: 2)), 22);
      expect(decodeRvvvvvvv(2, int.parse('00001101', radix: 2)), 23);
      expect(decodeRvvvvvvv(2, int.parse('00011101', radix: 2)), 24);
      expect(decodeRvvvvvvv(2, int.parse('00001110', radix: 2)), 25);
      expect(decodeRvvvvvvv(2, int.parse('00011110', radix: 2)), 26);
      expect(decodeRvvvvvvv(2, int.parse('00001111', radix: 2)), 27);
      expect(decodeRvvvvvvv(2, int.parse('00011111', radix: 2)), 28);

      expect(decodeRvvvvvvv(2, int.parse('10000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(2, int.parse('10010001', radix: 2)), -1);
      expect(decodeRvvvvvvv(2, int.parse('10000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(2, int.parse('10010000', radix: 2)), 0);
      expect(decodeRvvvvvvv(2, int.parse('10000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(2, int.parse('10010010', radix: 2)), 2);
      expect(decodeRvvvvvvv(2, int.parse('10000011', radix: 2)), 3);
      expect(decodeRvvvvvvv(2, int.parse('10010011', radix: 2)), 4);
      expect(decodeRvvvvvvv(2, int.parse('10000100', radix: 2)), 5);
      expect(decodeRvvvvvvv(2, int.parse('10010100', radix: 2)), 6);
      expect(decodeRvvvvvvv(2, int.parse('10000101', radix: 2)), 7);
      expect(decodeRvvvvvvv(2, int.parse('10010101', radix: 2)), 8);
      expect(decodeRvvvvvvv(2, int.parse('10000110', radix: 2)), 9);
      expect(decodeRvvvvvvv(2, int.parse('10010110', radix: 2)), 10);
      expect(decodeRvvvvvvv(2, int.parse('10000111', radix: 2)), 11);
      expect(decodeRvvvvvvv(2, int.parse('10010111', radix: 2)), 12);
      expect(decodeRvvvvvvv(2, int.parse('10001000', radix: 2)), 13);
      expect(decodeRvvvvvvv(2, int.parse('10011000', radix: 2)), 14);
      expect(decodeRvvvvvvv(2, int.parse('10001001', radix: 2)), 15);
      expect(decodeRvvvvvvv(2, int.parse('10011001', radix: 2)), 16);
      expect(decodeRvvvvvvv(2, int.parse('10001010', radix: 2)), 17);
      expect(decodeRvvvvvvv(2, int.parse('10011010', radix: 2)), 18);
      expect(decodeRvvvvvvv(2, int.parse('10001011', radix: 2)), 19);
      expect(decodeRvvvvvvv(2, int.parse('10011011', radix: 2)), 20);
      expect(decodeRvvvvvvv(2, int.parse('10001100', radix: 2)), 21);
      expect(decodeRvvvvvvv(2, int.parse('10011100', radix: 2)), 22);
      expect(decodeRvvvvvvv(2, int.parse('10001101', radix: 2)), 23);
      expect(decodeRvvvvvvv(2, int.parse('10011101', radix: 2)), 24);
      expect(decodeRvvvvvvv(2, int.parse('10001110', radix: 2)), 25);
      expect(decodeRvvvvvvv(2, int.parse('10011110', radix: 2)), 26);
      expect(decodeRvvvvvvv(2, int.parse('10001111', radix: 2)), 27);
      expect(decodeRvvvvvvv(2, int.parse('10011111', radix: 2)), 28);
    });

    test('encode_dcc28', () {
      expect(encodeRvvvvvvv(2, false, -1), int.parse('00000001', radix: 2));
      expect(encodeRvvvvvvv(2, false, 0), int.parse('00000000', radix: 2));
      expect(encodeRvvvvvvv(2, false, 1), int.parse('00000010', radix: 2));
      expect(encodeRvvvvvvv(2, false, 2), int.parse('00010010', radix: 2));
      expect(encodeRvvvvvvv(2, false, 3), int.parse('00000011', radix: 2));
      expect(encodeRvvvvvvv(2, false, 4), int.parse('00010011', radix: 2));
      expect(encodeRvvvvvvv(2, false, 5), int.parse('00000100', radix: 2));
      expect(encodeRvvvvvvv(2, false, 6), int.parse('00010100', radix: 2));
      expect(encodeRvvvvvvv(2, false, 7), int.parse('00000101', radix: 2));
      expect(encodeRvvvvvvv(2, false, 8), int.parse('00010101', radix: 2));
      expect(encodeRvvvvvvv(2, false, 9), int.parse('00000110', radix: 2));
      expect(encodeRvvvvvvv(2, false, 10), int.parse('00010110', radix: 2));
      expect(encodeRvvvvvvv(2, false, 11), int.parse('00000111', radix: 2));
      expect(encodeRvvvvvvv(2, false, 12), int.parse('00010111', radix: 2));
      expect(encodeRvvvvvvv(2, false, 13), int.parse('00001000', radix: 2));
      expect(encodeRvvvvvvv(2, false, 14), int.parse('00011000', radix: 2));
      expect(encodeRvvvvvvv(2, false, 15), int.parse('00001001', radix: 2));
      expect(encodeRvvvvvvv(2, false, 16), int.parse('00011001', radix: 2));
      expect(encodeRvvvvvvv(2, false, 17), int.parse('00001010', radix: 2));
      expect(encodeRvvvvvvv(2, false, 18), int.parse('00011010', radix: 2));
      expect(encodeRvvvvvvv(2, false, 19), int.parse('00001011', radix: 2));
      expect(encodeRvvvvvvv(2, false, 20), int.parse('00011011', radix: 2));
      expect(encodeRvvvvvvv(2, false, 21), int.parse('00001100', radix: 2));
      expect(encodeRvvvvvvv(2, false, 22), int.parse('00011100', radix: 2));
      expect(encodeRvvvvvvv(2, false, 23), int.parse('00001101', radix: 2));
      expect(encodeRvvvvvvv(2, false, 24), int.parse('00011101', radix: 2));
      expect(encodeRvvvvvvv(2, false, 25), int.parse('00001110', radix: 2));
      expect(encodeRvvvvvvv(2, false, 26), int.parse('00011110', radix: 2));
      expect(encodeRvvvvvvv(2, false, 27), int.parse('00001111', radix: 2));
      expect(encodeRvvvvvvv(2, false, 28), int.parse('00011111', radix: 2));

      expect(encodeRvvvvvvv(2, true, -1), int.parse('10000001', radix: 2));
      expect(encodeRvvvvvvv(2, true, 0), int.parse('10000000', radix: 2));
      expect(encodeRvvvvvvv(2, true, 1), int.parse('10000010', radix: 2));
      expect(encodeRvvvvvvv(2, true, 2), int.parse('10010010', radix: 2));
      expect(encodeRvvvvvvv(2, true, 3), int.parse('10000011', radix: 2));
      expect(encodeRvvvvvvv(2, true, 4), int.parse('10010011', radix: 2));
      expect(encodeRvvvvvvv(2, true, 5), int.parse('10000100', radix: 2));
      expect(encodeRvvvvvvv(2, true, 6), int.parse('10010100', radix: 2));
      expect(encodeRvvvvvvv(2, true, 7), int.parse('10000101', radix: 2));
      expect(encodeRvvvvvvv(2, true, 8), int.parse('10010101', radix: 2));
      expect(encodeRvvvvvvv(2, true, 9), int.parse('10000110', radix: 2));
      expect(encodeRvvvvvvv(2, true, 10), int.parse('10010110', radix: 2));
      expect(encodeRvvvvvvv(2, true, 11), int.parse('10000111', radix: 2));
      expect(encodeRvvvvvvv(2, true, 12), int.parse('10010111', radix: 2));
      expect(encodeRvvvvvvv(2, true, 13), int.parse('10001000', radix: 2));
      expect(encodeRvvvvvvv(2, true, 14), int.parse('10011000', radix: 2));
      expect(encodeRvvvvvvv(2, true, 15), int.parse('10001001', radix: 2));
      expect(encodeRvvvvvvv(2, true, 16), int.parse('10011001', radix: 2));
      expect(encodeRvvvvvvv(2, true, 17), int.parse('10001010', radix: 2));
      expect(encodeRvvvvvvv(2, true, 18), int.parse('10011010', radix: 2));
      expect(encodeRvvvvvvv(2, true, 19), int.parse('10001011', radix: 2));
      expect(encodeRvvvvvvv(2, true, 20), int.parse('10011011', radix: 2));
      expect(encodeRvvvvvvv(2, true, 21), int.parse('10001100', radix: 2));
      expect(encodeRvvvvvvv(2, true, 22), int.parse('10011100', radix: 2));
      expect(encodeRvvvvvvv(2, true, 23), int.parse('10001101', radix: 2));
      expect(encodeRvvvvvvv(2, true, 24), int.parse('10011101', radix: 2));
      expect(encodeRvvvvvvv(2, true, 25), int.parse('10001110', radix: 2));
      expect(encodeRvvvvvvv(2, true, 26), int.parse('10011110', radix: 2));
      expect(encodeRvvvvvvv(2, true, 27), int.parse('10001111', radix: 2));
      expect(encodeRvvvvvvv(2, true, 28), int.parse('10011111', radix: 2));
    });

    test('decode_dcc128', () {
      expect(decodeRvvvvvvv(4, int.parse('00000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(4, int.parse('00000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(4, int.parse('00000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(4, int.parse('00000011', radix: 2)), 2);
      expect(decodeRvvvvvvv(4, int.parse('00000100', radix: 2)), 3);
      expect(decodeRvvvvvvv(4, int.parse('00000101', radix: 2)), 4);
      expect(decodeRvvvvvvv(4, int.parse('00000110', radix: 2)), 5);
      expect(decodeRvvvvvvv(4, int.parse('00000111', radix: 2)), 6);
      expect(decodeRvvvvvvv(4, int.parse('00001000', radix: 2)), 7);
      expect(decodeRvvvvvvv(4, int.parse('00001001', radix: 2)), 8);
      expect(decodeRvvvvvvv(4, int.parse('00001010', radix: 2)), 9);
      expect(decodeRvvvvvvv(4, int.parse('00001011', radix: 2)), 10);
      expect(decodeRvvvvvvv(4, int.parse('00001100', radix: 2)), 11);
      expect(decodeRvvvvvvv(4, int.parse('00001101', radix: 2)), 12);
      expect(decodeRvvvvvvv(4, int.parse('00001110', radix: 2)), 13);
      expect(decodeRvvvvvvv(4, int.parse('00001111', radix: 2)), 14);
      expect(decodeRvvvvvvv(4, int.parse('00010000', radix: 2)), 15);
      expect(decodeRvvvvvvv(4, int.parse('00010001', radix: 2)), 16);
      expect(decodeRvvvvvvv(4, int.parse('00010010', radix: 2)), 17);
      expect(decodeRvvvvvvv(4, int.parse('00010011', radix: 2)), 18);
      expect(decodeRvvvvvvv(4, int.parse('00010100', radix: 2)), 19);
      expect(decodeRvvvvvvv(4, int.parse('00010101', radix: 2)), 20);
      expect(decodeRvvvvvvv(4, int.parse('00010110', radix: 2)), 21);
      expect(decodeRvvvvvvv(4, int.parse('00010111', radix: 2)), 22);
      expect(decodeRvvvvvvv(4, int.parse('00011000', radix: 2)), 23);
      expect(decodeRvvvvvvv(4, int.parse('00011001', radix: 2)), 24);
      expect(decodeRvvvvvvv(4, int.parse('00011010', radix: 2)), 25);
      expect(decodeRvvvvvvv(4, int.parse('00011011', radix: 2)), 26);
      expect(decodeRvvvvvvv(4, int.parse('00011100', radix: 2)), 27);
      expect(decodeRvvvvvvv(4, int.parse('00011101', radix: 2)), 28);
      expect(decodeRvvvvvvv(4, int.parse('00011110', radix: 2)), 29);
      expect(decodeRvvvvvvv(4, int.parse('00011111', radix: 2)), 30);
      expect(decodeRvvvvvvv(4, int.parse('00100000', radix: 2)), 31);
      expect(decodeRvvvvvvv(4, int.parse('00100001', radix: 2)), 32);
      expect(decodeRvvvvvvv(4, int.parse('00100010', radix: 2)), 33);
      expect(decodeRvvvvvvv(4, int.parse('00100011', radix: 2)), 34);
      expect(decodeRvvvvvvv(4, int.parse('00100100', radix: 2)), 35);
      expect(decodeRvvvvvvv(4, int.parse('00100101', radix: 2)), 36);
      expect(decodeRvvvvvvv(4, int.parse('00100110', radix: 2)), 37);
      expect(decodeRvvvvvvv(4, int.parse('00100111', radix: 2)), 38);
      expect(decodeRvvvvvvv(4, int.parse('00101000', radix: 2)), 39);
      expect(decodeRvvvvvvv(4, int.parse('00101001', radix: 2)), 40);
      expect(decodeRvvvvvvv(4, int.parse('00101010', radix: 2)), 41);
      expect(decodeRvvvvvvv(4, int.parse('00101011', radix: 2)), 42);
      expect(decodeRvvvvvvv(4, int.parse('00101100', radix: 2)), 43);
      expect(decodeRvvvvvvv(4, int.parse('00101101', radix: 2)), 44);
      expect(decodeRvvvvvvv(4, int.parse('00101110', radix: 2)), 45);
      expect(decodeRvvvvvvv(4, int.parse('00101111', radix: 2)), 46);
      expect(decodeRvvvvvvv(4, int.parse('00110000', radix: 2)), 47);
      expect(decodeRvvvvvvv(4, int.parse('00110001', radix: 2)), 48);
      expect(decodeRvvvvvvv(4, int.parse('00110010', radix: 2)), 49);
      expect(decodeRvvvvvvv(4, int.parse('00110011', radix: 2)), 50);
      expect(decodeRvvvvvvv(4, int.parse('00110100', radix: 2)), 51);
      expect(decodeRvvvvvvv(4, int.parse('00110101', radix: 2)), 52);
      expect(decodeRvvvvvvv(4, int.parse('00110110', radix: 2)), 53);
      expect(decodeRvvvvvvv(4, int.parse('00110111', radix: 2)), 54);
      expect(decodeRvvvvvvv(4, int.parse('00111000', radix: 2)), 55);
      expect(decodeRvvvvvvv(4, int.parse('00111001', radix: 2)), 56);
      expect(decodeRvvvvvvv(4, int.parse('00111010', radix: 2)), 57);
      expect(decodeRvvvvvvv(4, int.parse('00111011', radix: 2)), 58);
      expect(decodeRvvvvvvv(4, int.parse('00111100', radix: 2)), 59);
      expect(decodeRvvvvvvv(4, int.parse('00111101', radix: 2)), 60);
      expect(decodeRvvvvvvv(4, int.parse('00111110', radix: 2)), 61);
      expect(decodeRvvvvvvv(4, int.parse('00111111', radix: 2)), 62);
      expect(decodeRvvvvvvv(4, int.parse('01000000', radix: 2)), 63);
      expect(decodeRvvvvvvv(4, int.parse('01000001', radix: 2)), 64);
      expect(decodeRvvvvvvv(4, int.parse('01000010', radix: 2)), 65);
      expect(decodeRvvvvvvv(4, int.parse('01000011', radix: 2)), 66);
      expect(decodeRvvvvvvv(4, int.parse('01000100', radix: 2)), 67);
      expect(decodeRvvvvvvv(4, int.parse('01000101', radix: 2)), 68);
      expect(decodeRvvvvvvv(4, int.parse('01000110', radix: 2)), 69);
      expect(decodeRvvvvvvv(4, int.parse('01000111', radix: 2)), 70);
      expect(decodeRvvvvvvv(4, int.parse('01001000', radix: 2)), 71);
      expect(decodeRvvvvvvv(4, int.parse('01001001', radix: 2)), 72);
      expect(decodeRvvvvvvv(4, int.parse('01001010', radix: 2)), 73);
      expect(decodeRvvvvvvv(4, int.parse('01001011', radix: 2)), 74);
      expect(decodeRvvvvvvv(4, int.parse('01001100', radix: 2)), 75);
      expect(decodeRvvvvvvv(4, int.parse('01001101', radix: 2)), 76);
      expect(decodeRvvvvvvv(4, int.parse('01001110', radix: 2)), 77);
      expect(decodeRvvvvvvv(4, int.parse('01001111', radix: 2)), 78);
      expect(decodeRvvvvvvv(4, int.parse('01010000', radix: 2)), 79);
      expect(decodeRvvvvvvv(4, int.parse('01010001', radix: 2)), 80);
      expect(decodeRvvvvvvv(4, int.parse('01010010', radix: 2)), 81);
      expect(decodeRvvvvvvv(4, int.parse('01010011', radix: 2)), 82);
      expect(decodeRvvvvvvv(4, int.parse('01010100', radix: 2)), 83);
      expect(decodeRvvvvvvv(4, int.parse('01010101', radix: 2)), 84);
      expect(decodeRvvvvvvv(4, int.parse('01010110', radix: 2)), 85);
      expect(decodeRvvvvvvv(4, int.parse('01010111', radix: 2)), 86);
      expect(decodeRvvvvvvv(4, int.parse('01011000', radix: 2)), 87);
      expect(decodeRvvvvvvv(4, int.parse('01011001', radix: 2)), 88);
      expect(decodeRvvvvvvv(4, int.parse('01011010', radix: 2)), 89);
      expect(decodeRvvvvvvv(4, int.parse('01011011', radix: 2)), 90);
      expect(decodeRvvvvvvv(4, int.parse('01011100', radix: 2)), 91);
      expect(decodeRvvvvvvv(4, int.parse('01011101', radix: 2)), 92);
      expect(decodeRvvvvvvv(4, int.parse('01011110', radix: 2)), 93);
      expect(decodeRvvvvvvv(4, int.parse('01011111', radix: 2)), 94);
      expect(decodeRvvvvvvv(4, int.parse('01100000', radix: 2)), 95);
      expect(decodeRvvvvvvv(4, int.parse('01100001', radix: 2)), 96);
      expect(decodeRvvvvvvv(4, int.parse('01100010', radix: 2)), 97);
      expect(decodeRvvvvvvv(4, int.parse('01100011', radix: 2)), 98);
      expect(decodeRvvvvvvv(4, int.parse('01100100', radix: 2)), 99);
      expect(decodeRvvvvvvv(4, int.parse('01100101', radix: 2)), 100);
      expect(decodeRvvvvvvv(4, int.parse('01100110', radix: 2)), 101);
      expect(decodeRvvvvvvv(4, int.parse('01100111', radix: 2)), 102);
      expect(decodeRvvvvvvv(4, int.parse('01101000', radix: 2)), 103);
      expect(decodeRvvvvvvv(4, int.parse('01101001', radix: 2)), 104);
      expect(decodeRvvvvvvv(4, int.parse('01101010', radix: 2)), 105);
      expect(decodeRvvvvvvv(4, int.parse('01101011', radix: 2)), 106);
      expect(decodeRvvvvvvv(4, int.parse('01101100', radix: 2)), 107);
      expect(decodeRvvvvvvv(4, int.parse('01101101', radix: 2)), 108);
      expect(decodeRvvvvvvv(4, int.parse('01101110', radix: 2)), 109);
      expect(decodeRvvvvvvv(4, int.parse('01101111', radix: 2)), 110);
      expect(decodeRvvvvvvv(4, int.parse('01110000', radix: 2)), 111);
      expect(decodeRvvvvvvv(4, int.parse('01110001', radix: 2)), 112);
      expect(decodeRvvvvvvv(4, int.parse('01110010', radix: 2)), 113);
      expect(decodeRvvvvvvv(4, int.parse('01110011', radix: 2)), 114);
      expect(decodeRvvvvvvv(4, int.parse('01110100', radix: 2)), 115);
      expect(decodeRvvvvvvv(4, int.parse('01110101', radix: 2)), 116);
      expect(decodeRvvvvvvv(4, int.parse('01110110', radix: 2)), 117);
      expect(decodeRvvvvvvv(4, int.parse('01110111', radix: 2)), 118);
      expect(decodeRvvvvvvv(4, int.parse('01111000', radix: 2)), 119);
      expect(decodeRvvvvvvv(4, int.parse('01111001', radix: 2)), 120);
      expect(decodeRvvvvvvv(4, int.parse('01111010', radix: 2)), 121);
      expect(decodeRvvvvvvv(4, int.parse('01111011', radix: 2)), 122);
      expect(decodeRvvvvvvv(4, int.parse('01111100', radix: 2)), 123);
      expect(decodeRvvvvvvv(4, int.parse('01111101', radix: 2)), 124);
      expect(decodeRvvvvvvv(4, int.parse('01111110', radix: 2)), 125);
      expect(decodeRvvvvvvv(4, int.parse('01111111', radix: 2)), 126);

      expect(decodeRvvvvvvv(4, int.parse('10000001', radix: 2)), -1);
      expect(decodeRvvvvvvv(4, int.parse('10000000', radix: 2)), 0);
      expect(decodeRvvvvvvv(4, int.parse('10000010', radix: 2)), 1);
      expect(decodeRvvvvvvv(4, int.parse('10000011', radix: 2)), 2);
      expect(decodeRvvvvvvv(4, int.parse('10000100', radix: 2)), 3);
      expect(decodeRvvvvvvv(4, int.parse('10000101', radix: 2)), 4);
      expect(decodeRvvvvvvv(4, int.parse('10000110', radix: 2)), 5);
      expect(decodeRvvvvvvv(4, int.parse('10000111', radix: 2)), 6);
      expect(decodeRvvvvvvv(4, int.parse('10001000', radix: 2)), 7);
      expect(decodeRvvvvvvv(4, int.parse('10001001', radix: 2)), 8);
      expect(decodeRvvvvvvv(4, int.parse('10001010', radix: 2)), 9);
      expect(decodeRvvvvvvv(4, int.parse('10001011', radix: 2)), 10);
      expect(decodeRvvvvvvv(4, int.parse('10001100', radix: 2)), 11);
      expect(decodeRvvvvvvv(4, int.parse('10001101', radix: 2)), 12);
      expect(decodeRvvvvvvv(4, int.parse('10001110', radix: 2)), 13);
      expect(decodeRvvvvvvv(4, int.parse('10001111', radix: 2)), 14);
      expect(decodeRvvvvvvv(4, int.parse('10010000', radix: 2)), 15);
      expect(decodeRvvvvvvv(4, int.parse('10010001', radix: 2)), 16);
      expect(decodeRvvvvvvv(4, int.parse('10010010', radix: 2)), 17);
      expect(decodeRvvvvvvv(4, int.parse('10010011', radix: 2)), 18);
      expect(decodeRvvvvvvv(4, int.parse('10010100', radix: 2)), 19);
      expect(decodeRvvvvvvv(4, int.parse('10010101', radix: 2)), 20);
      expect(decodeRvvvvvvv(4, int.parse('10010110', radix: 2)), 21);
      expect(decodeRvvvvvvv(4, int.parse('10010111', radix: 2)), 22);
      expect(decodeRvvvvvvv(4, int.parse('10011000', radix: 2)), 23);
      expect(decodeRvvvvvvv(4, int.parse('10011001', radix: 2)), 24);
      expect(decodeRvvvvvvv(4, int.parse('10011010', radix: 2)), 25);
      expect(decodeRvvvvvvv(4, int.parse('10011011', radix: 2)), 26);
      expect(decodeRvvvvvvv(4, int.parse('10011100', radix: 2)), 27);
      expect(decodeRvvvvvvv(4, int.parse('10011101', radix: 2)), 28);
      expect(decodeRvvvvvvv(4, int.parse('10011110', radix: 2)), 29);
      expect(decodeRvvvvvvv(4, int.parse('10011111', radix: 2)), 30);
      expect(decodeRvvvvvvv(4, int.parse('10100000', radix: 2)), 31);
      expect(decodeRvvvvvvv(4, int.parse('10100001', radix: 2)), 32);
      expect(decodeRvvvvvvv(4, int.parse('10100010', radix: 2)), 33);
      expect(decodeRvvvvvvv(4, int.parse('10100011', radix: 2)), 34);
      expect(decodeRvvvvvvv(4, int.parse('10100100', radix: 2)), 35);
      expect(decodeRvvvvvvv(4, int.parse('10100101', radix: 2)), 36);
      expect(decodeRvvvvvvv(4, int.parse('10100110', radix: 2)), 37);
      expect(decodeRvvvvvvv(4, int.parse('10100111', radix: 2)), 38);
      expect(decodeRvvvvvvv(4, int.parse('10101000', radix: 2)), 39);
      expect(decodeRvvvvvvv(4, int.parse('10101001', radix: 2)), 40);
      expect(decodeRvvvvvvv(4, int.parse('10101010', radix: 2)), 41);
      expect(decodeRvvvvvvv(4, int.parse('10101011', radix: 2)), 42);
      expect(decodeRvvvvvvv(4, int.parse('10101100', radix: 2)), 43);
      expect(decodeRvvvvvvv(4, int.parse('10101101', radix: 2)), 44);
      expect(decodeRvvvvvvv(4, int.parse('10101110', radix: 2)), 45);
      expect(decodeRvvvvvvv(4, int.parse('10101111', radix: 2)), 46);
      expect(decodeRvvvvvvv(4, int.parse('10110000', radix: 2)), 47);
      expect(decodeRvvvvvvv(4, int.parse('10110001', radix: 2)), 48);
      expect(decodeRvvvvvvv(4, int.parse('10110010', radix: 2)), 49);
      expect(decodeRvvvvvvv(4, int.parse('10110011', radix: 2)), 50);
      expect(decodeRvvvvvvv(4, int.parse('10110100', radix: 2)), 51);
      expect(decodeRvvvvvvv(4, int.parse('10110101', radix: 2)), 52);
      expect(decodeRvvvvvvv(4, int.parse('10110110', radix: 2)), 53);
      expect(decodeRvvvvvvv(4, int.parse('10110111', radix: 2)), 54);
      expect(decodeRvvvvvvv(4, int.parse('10111000', radix: 2)), 55);
      expect(decodeRvvvvvvv(4, int.parse('10111001', radix: 2)), 56);
      expect(decodeRvvvvvvv(4, int.parse('10111010', radix: 2)), 57);
      expect(decodeRvvvvvvv(4, int.parse('10111011', radix: 2)), 58);
      expect(decodeRvvvvvvv(4, int.parse('10111100', radix: 2)), 59);
      expect(decodeRvvvvvvv(4, int.parse('10111101', radix: 2)), 60);
      expect(decodeRvvvvvvv(4, int.parse('10111110', radix: 2)), 61);
      expect(decodeRvvvvvvv(4, int.parse('10111111', radix: 2)), 62);
      expect(decodeRvvvvvvv(4, int.parse('11000000', radix: 2)), 63);
      expect(decodeRvvvvvvv(4, int.parse('11000001', radix: 2)), 64);
      expect(decodeRvvvvvvv(4, int.parse('11000010', radix: 2)), 65);
      expect(decodeRvvvvvvv(4, int.parse('11000011', radix: 2)), 66);
      expect(decodeRvvvvvvv(4, int.parse('11000100', radix: 2)), 67);
      expect(decodeRvvvvvvv(4, int.parse('11000101', radix: 2)), 68);
      expect(decodeRvvvvvvv(4, int.parse('11000110', radix: 2)), 69);
      expect(decodeRvvvvvvv(4, int.parse('11000111', radix: 2)), 70);
      expect(decodeRvvvvvvv(4, int.parse('11001000', radix: 2)), 71);
      expect(decodeRvvvvvvv(4, int.parse('11001001', radix: 2)), 72);
      expect(decodeRvvvvvvv(4, int.parse('11001010', radix: 2)), 73);
      expect(decodeRvvvvvvv(4, int.parse('11001011', radix: 2)), 74);
      expect(decodeRvvvvvvv(4, int.parse('11001100', radix: 2)), 75);
      expect(decodeRvvvvvvv(4, int.parse('11001101', radix: 2)), 76);
      expect(decodeRvvvvvvv(4, int.parse('11001110', radix: 2)), 77);
      expect(decodeRvvvvvvv(4, int.parse('11001111', radix: 2)), 78);
      expect(decodeRvvvvvvv(4, int.parse('11010000', radix: 2)), 79);
      expect(decodeRvvvvvvv(4, int.parse('11010001', radix: 2)), 80);
      expect(decodeRvvvvvvv(4, int.parse('11010010', radix: 2)), 81);
      expect(decodeRvvvvvvv(4, int.parse('11010011', radix: 2)), 82);
      expect(decodeRvvvvvvv(4, int.parse('11010100', radix: 2)), 83);
      expect(decodeRvvvvvvv(4, int.parse('11010101', radix: 2)), 84);
      expect(decodeRvvvvvvv(4, int.parse('11010110', radix: 2)), 85);
      expect(decodeRvvvvvvv(4, int.parse('11010111', radix: 2)), 86);
      expect(decodeRvvvvvvv(4, int.parse('11011000', radix: 2)), 87);
      expect(decodeRvvvvvvv(4, int.parse('11011001', radix: 2)), 88);
      expect(decodeRvvvvvvv(4, int.parse('11011010', radix: 2)), 89);
      expect(decodeRvvvvvvv(4, int.parse('11011011', radix: 2)), 90);
      expect(decodeRvvvvvvv(4, int.parse('11011100', radix: 2)), 91);
      expect(decodeRvvvvvvv(4, int.parse('11011101', radix: 2)), 92);
      expect(decodeRvvvvvvv(4, int.parse('11011110', radix: 2)), 93);
      expect(decodeRvvvvvvv(4, int.parse('11011111', radix: 2)), 94);
      expect(decodeRvvvvvvv(4, int.parse('11100000', radix: 2)), 95);
      expect(decodeRvvvvvvv(4, int.parse('11100001', radix: 2)), 96);
      expect(decodeRvvvvvvv(4, int.parse('11100010', radix: 2)), 97);
      expect(decodeRvvvvvvv(4, int.parse('11100011', radix: 2)), 98);
      expect(decodeRvvvvvvv(4, int.parse('11100100', radix: 2)), 99);
      expect(decodeRvvvvvvv(4, int.parse('11100101', radix: 2)), 100);
      expect(decodeRvvvvvvv(4, int.parse('11100110', radix: 2)), 101);
      expect(decodeRvvvvvvv(4, int.parse('11100111', radix: 2)), 102);
      expect(decodeRvvvvvvv(4, int.parse('11101000', radix: 2)), 103);
      expect(decodeRvvvvvvv(4, int.parse('11101001', radix: 2)), 104);
      expect(decodeRvvvvvvv(4, int.parse('11101010', radix: 2)), 105);
      expect(decodeRvvvvvvv(4, int.parse('11101011', radix: 2)), 106);
      expect(decodeRvvvvvvv(4, int.parse('11101100', radix: 2)), 107);
      expect(decodeRvvvvvvv(4, int.parse('11101101', radix: 2)), 108);
      expect(decodeRvvvvvvv(4, int.parse('11101110', radix: 2)), 109);
      expect(decodeRvvvvvvv(4, int.parse('11101111', radix: 2)), 110);
      expect(decodeRvvvvvvv(4, int.parse('11110000', radix: 2)), 111);
      expect(decodeRvvvvvvv(4, int.parse('11110001', radix: 2)), 112);
      expect(decodeRvvvvvvv(4, int.parse('11110010', radix: 2)), 113);
      expect(decodeRvvvvvvv(4, int.parse('11110011', radix: 2)), 114);
      expect(decodeRvvvvvvv(4, int.parse('11110100', radix: 2)), 115);
      expect(decodeRvvvvvvv(4, int.parse('11110101', radix: 2)), 116);
      expect(decodeRvvvvvvv(4, int.parse('11110110', radix: 2)), 117);
      expect(decodeRvvvvvvv(4, int.parse('11110111', radix: 2)), 118);
      expect(decodeRvvvvvvv(4, int.parse('11111000', radix: 2)), 119);
      expect(decodeRvvvvvvv(4, int.parse('11111001', radix: 2)), 120);
      expect(decodeRvvvvvvv(4, int.parse('11111010', radix: 2)), 121);
      expect(decodeRvvvvvvv(4, int.parse('11111011', radix: 2)), 122);
      expect(decodeRvvvvvvv(4, int.parse('11111100', radix: 2)), 123);
      expect(decodeRvvvvvvv(4, int.parse('11111101', radix: 2)), 124);
      expect(decodeRvvvvvvv(4, int.parse('11111110', radix: 2)), 125);
      expect(decodeRvvvvvvv(4, int.parse('11111111', radix: 2)), 126);
    });

    test('encode_dcc128', () {
      expect(encodeRvvvvvvv(4, false, -1), int.parse('00000001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 0), int.parse('00000000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 1), int.parse('00000010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 2), int.parse('00000011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 3), int.parse('00000100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 4), int.parse('00000101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 5), int.parse('00000110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 6), int.parse('00000111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 7), int.parse('00001000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 8), int.parse('00001001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 9), int.parse('00001010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 10), int.parse('00001011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 11), int.parse('00001100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 12), int.parse('00001101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 13), int.parse('00001110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 14), int.parse('00001111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 15), int.parse('00010000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 16), int.parse('00010001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 17), int.parse('00010010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 18), int.parse('00010011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 19), int.parse('00010100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 20), int.parse('00010101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 21), int.parse('00010110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 22), int.parse('00010111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 23), int.parse('00011000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 24), int.parse('00011001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 25), int.parse('00011010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 26), int.parse('00011011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 27), int.parse('00011100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 28), int.parse('00011101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 29), int.parse('00011110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 30), int.parse('00011111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 31), int.parse('00100000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 32), int.parse('00100001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 33), int.parse('00100010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 34), int.parse('00100011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 35), int.parse('00100100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 36), int.parse('00100101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 37), int.parse('00100110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 38), int.parse('00100111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 39), int.parse('00101000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 40), int.parse('00101001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 41), int.parse('00101010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 42), int.parse('00101011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 43), int.parse('00101100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 44), int.parse('00101101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 45), int.parse('00101110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 46), int.parse('00101111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 47), int.parse('00110000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 48), int.parse('00110001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 49), int.parse('00110010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 50), int.parse('00110011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 51), int.parse('00110100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 52), int.parse('00110101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 53), int.parse('00110110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 54), int.parse('00110111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 55), int.parse('00111000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 56), int.parse('00111001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 57), int.parse('00111010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 58), int.parse('00111011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 59), int.parse('00111100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 60), int.parse('00111101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 61), int.parse('00111110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 62), int.parse('00111111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 63), int.parse('01000000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 64), int.parse('01000001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 65), int.parse('01000010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 66), int.parse('01000011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 67), int.parse('01000100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 68), int.parse('01000101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 69), int.parse('01000110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 70), int.parse('01000111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 71), int.parse('01001000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 72), int.parse('01001001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 73), int.parse('01001010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 74), int.parse('01001011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 75), int.parse('01001100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 76), int.parse('01001101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 77), int.parse('01001110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 78), int.parse('01001111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 79), int.parse('01010000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 80), int.parse('01010001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 81), int.parse('01010010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 82), int.parse('01010011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 83), int.parse('01010100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 84), int.parse('01010101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 85), int.parse('01010110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 86), int.parse('01010111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 87), int.parse('01011000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 88), int.parse('01011001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 89), int.parse('01011010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 90), int.parse('01011011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 91), int.parse('01011100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 92), int.parse('01011101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 93), int.parse('01011110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 94), int.parse('01011111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 95), int.parse('01100000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 96), int.parse('01100001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 97), int.parse('01100010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 98), int.parse('01100011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 99), int.parse('01100100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 100), int.parse('01100101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 101), int.parse('01100110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 102), int.parse('01100111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 103), int.parse('01101000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 104), int.parse('01101001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 105), int.parse('01101010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 106), int.parse('01101011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 107), int.parse('01101100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 108), int.parse('01101101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 109), int.parse('01101110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 110), int.parse('01101111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 111), int.parse('01110000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 112), int.parse('01110001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 113), int.parse('01110010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 114), int.parse('01110011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 115), int.parse('01110100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 116), int.parse('01110101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 117), int.parse('01110110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 118), int.parse('01110111', radix: 2));
      expect(encodeRvvvvvvv(4, false, 119), int.parse('01111000', radix: 2));
      expect(encodeRvvvvvvv(4, false, 120), int.parse('01111001', radix: 2));
      expect(encodeRvvvvvvv(4, false, 121), int.parse('01111010', radix: 2));
      expect(encodeRvvvvvvv(4, false, 122), int.parse('01111011', radix: 2));
      expect(encodeRvvvvvvv(4, false, 123), int.parse('01111100', radix: 2));
      expect(encodeRvvvvvvv(4, false, 124), int.parse('01111101', radix: 2));
      expect(encodeRvvvvvvv(4, false, 125), int.parse('01111110', radix: 2));
      expect(encodeRvvvvvvv(4, false, 126), int.parse('01111111', radix: 2));

      expect(encodeRvvvvvvv(4, true, -1), int.parse('10000001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 0), int.parse('10000000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 1), int.parse('10000010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 2), int.parse('10000011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 3), int.parse('10000100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 4), int.parse('10000101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 5), int.parse('10000110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 6), int.parse('10000111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 7), int.parse('10001000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 8), int.parse('10001001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 9), int.parse('10001010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 10), int.parse('10001011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 11), int.parse('10001100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 12), int.parse('10001101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 13), int.parse('10001110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 14), int.parse('10001111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 15), int.parse('10010000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 16), int.parse('10010001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 17), int.parse('10010010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 18), int.parse('10010011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 19), int.parse('10010100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 20), int.parse('10010101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 21), int.parse('10010110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 22), int.parse('10010111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 23), int.parse('10011000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 24), int.parse('10011001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 25), int.parse('10011010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 26), int.parse('10011011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 27), int.parse('10011100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 28), int.parse('10011101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 29), int.parse('10011110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 30), int.parse('10011111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 31), int.parse('10100000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 32), int.parse('10100001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 33), int.parse('10100010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 34), int.parse('10100011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 35), int.parse('10100100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 36), int.parse('10100101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 37), int.parse('10100110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 38), int.parse('10100111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 39), int.parse('10101000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 40), int.parse('10101001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 41), int.parse('10101010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 42), int.parse('10101011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 43), int.parse('10101100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 44), int.parse('10101101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 45), int.parse('10101110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 46), int.parse('10101111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 47), int.parse('10110000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 48), int.parse('10110001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 49), int.parse('10110010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 50), int.parse('10110011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 51), int.parse('10110100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 52), int.parse('10110101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 53), int.parse('10110110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 54), int.parse('10110111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 55), int.parse('10111000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 56), int.parse('10111001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 57), int.parse('10111010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 58), int.parse('10111011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 59), int.parse('10111100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 60), int.parse('10111101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 61), int.parse('10111110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 62), int.parse('10111111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 63), int.parse('11000000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 64), int.parse('11000001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 65), int.parse('11000010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 66), int.parse('11000011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 67), int.parse('11000100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 68), int.parse('11000101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 69), int.parse('11000110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 70), int.parse('11000111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 71), int.parse('11001000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 72), int.parse('11001001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 73), int.parse('11001010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 74), int.parse('11001011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 75), int.parse('11001100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 76), int.parse('11001101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 77), int.parse('11001110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 78), int.parse('11001111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 79), int.parse('11010000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 80), int.parse('11010001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 81), int.parse('11010010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 82), int.parse('11010011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 83), int.parse('11010100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 84), int.parse('11010101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 85), int.parse('11010110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 86), int.parse('11010111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 87), int.parse('11011000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 88), int.parse('11011001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 89), int.parse('11011010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 90), int.parse('11011011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 91), int.parse('11011100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 92), int.parse('11011101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 93), int.parse('11011110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 94), int.parse('11011111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 95), int.parse('11100000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 96), int.parse('11100001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 97), int.parse('11100010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 98), int.parse('11100011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 99), int.parse('11100100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 100), int.parse('11100101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 101), int.parse('11100110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 102), int.parse('11100111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 103), int.parse('11101000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 104), int.parse('11101001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 105), int.parse('11101010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 106), int.parse('11101011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 107), int.parse('11101100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 108), int.parse('11101101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 109), int.parse('11101110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 110), int.parse('11101111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 111), int.parse('11110000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 112), int.parse('11110001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 113), int.parse('11110010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 114), int.parse('11110011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 115), int.parse('11110100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 116), int.parse('11110101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 117), int.parse('11110110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 118), int.parse('11110111', radix: 2));
      expect(encodeRvvvvvvv(4, true, 119), int.parse('11111000', radix: 2));
      expect(encodeRvvvvvvv(4, true, 120), int.parse('11111001', radix: 2));
      expect(encodeRvvvvvvv(4, true, 121), int.parse('11111010', radix: 2));
      expect(encodeRvvvvvvv(4, true, 122), int.parse('11111011', radix: 2));
      expect(encodeRvvvvvvv(4, true, 123), int.parse('11111100', radix: 2));
      expect(encodeRvvvvvvv(4, true, 124), int.parse('11111101', radix: 2));
      expect(encodeRvvvvvvv(4, true, 125), int.parse('11111110', radix: 2));
      expect(encodeRvvvvvvv(4, true, 126), int.parse('11111111', radix: 2));
    });
  });
}
